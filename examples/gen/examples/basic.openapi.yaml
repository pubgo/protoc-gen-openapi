openapi: 3.1.0
info:
  title: Hello World
  description: "This is a service which says hello to you!"
  version: v2
  contact:
    name: Ein
    url: https://github.com/sudorandom/protoc-gen-connect-openapi
    email: ein@sudorandom.com
  license:
    name: MIT License
    url: https://github.com/sudorandom/protoc-gen-connect-openapi/blob/master/LICENSE
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    example.basic.HelloReply:
      type: object
      properties:
        message:
          type: string
          title: message
      title: HelloReply
      additionalProperties: false
      description: The response message containing the greetings
    example.basic.HelloRequest:
      type: object
      properties:
        name:
          type: string
          examples:
            - Ein
          title: name
          maxLength: 100
          minLength: 3
        helloCount:
          exclusiveMaximum: 42
          type: integer
          title: hello_count
      title: HelloRequest
      additionalProperties: false
      description: The request message containing the user's name.
    example.basic.Response:
      type: object
      properties:
        repl:
          type: array
          items:
            $ref: '#/components/schemas/example.basic.HelloReply'
          title: repl
      title: Response
      additionalProperties: false
    lava-protocol-version:
      type: number
      title: Lava-Protocol-Version
      enum:
        - 1
      description: Define the version of the Lava protocol
      const: 1
    lava-timeout-header:
      type: number
      title: Lava-Timeout-Ms
      description: Define the timeout, in ms
    lava.error:
      type: object
      properties:
        status_code:
          type: string
          examples:
            - OK
          title: status code
          format: enum
          enum:
            - OK
            - Canceled
            - InvalidArgument
            - DeadlineExceeded
            - NotFound
            - AlreadyExists
            - PermissionDenied
            - ResourceExhausted
            - FailedPrecondition
            - Aborted
            - OutOfRange
            - Unimplemented
            - Internal
            - Unavailable
            - DataLoss
            - Unauthenticated
          description: GRPC code corresponding to HTTP status code, which can be converted to each other
        name:
          type: string
          description: Error name, e.g. lava.auth.token_not_found.
        message:
          type: string
          description: Error message, e.g. token not found
        code:
          type: number
          description: Business Code, e.g. 200001
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          title: details
          description: Error detail include request or other user defined information
      title: Lava Error
      additionalProperties: true
      description: 'Error type returned by lava: https://github.com/pubgo/funk/blob/master/proto/errorpb/errors.proto'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security:
  - bearerAuth: []
paths:
  /example.basic.Greeter/SayHello:
    post:
      tags:
        - example.basic.Greeter
      summary: SayHello
      description: This is a description just for OpenAPI
      operationId: example.basic.Greeter.SayHello
      parameters:
        - name: Lava-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/lava-protocol-version'
        - name: Lava-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/lava-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
        required: true
      responses:
        default:
          description: Error
          headers:
            x-request-id:
              description: request id
              required: true
              example: d1nqvseo94bs73f3c76g
            x-request-latency:
              description: request latency
              required: true
              example: "3217"
            x-request-operation:
              description: request operation
              required: true
              example: /lava.v1.Org/Get
            x-request-version:
              description: request service version
              required: true
              example: v0.0.155-alpha.5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lava.error'
        "200":
          description: Success
          headers:
            x-request-id:
              description: request id
              required: true
              example: d1nqvseo94bs73f3c76g
            x-request-latency:
              description: request latency
              required: true
              example: "3217"
            x-request-operation:
              description: request operation
              required: true
              example: /lava.v1.Org/Get
            x-request-version:
              description: request service version
              required: true
              example: v0.0.155-alpha.5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/example.basic.HelloReply'
  /example.basic.Greeter/WriteHello:
    post:
      tags:
        - example.basic.Greeter
      summary: WriteHello
      description: Writes a greeting (has side effects)
      operationId: example.basic.Greeter.WriteHello
      parameters:
        - name: Lava-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/lava-protocol-version'
        - name: Lava-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/lava-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
        required: true
      responses:
        default:
          description: Error
          headers:
            x-request-id:
              description: request id
              required: true
              example: d1nqvseo94bs73f3c76g
            x-request-latency:
              description: request latency
              required: true
              example: "3217"
            x-request-operation:
              description: request operation
              required: true
              example: /lava.v1.Org/Get
            x-request-version:
              description: request service version
              required: true
              example: v0.0.155-alpha.5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lava.error'
        "200":
          description: Success
          headers:
            x-request-id:
              description: request id
              required: true
              example: d1nqvseo94bs73f3c76g
            x-request-latency:
              description: request latency
              required: true
              example: "3217"
            x-request-operation:
              description: request operation
              required: true
              example: /lava.v1.Org/Get
            x-request-version:
              description: request service version
              required: true
              example: v0.0.155-alpha.5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/example.basic.Response'
tags:
  - name: example.basic.Greeter
    description: The greeting service definition.
