openapi: 3.1.0
info:
  title: Hello World
  description: This is a service which says hello to you!
  contact:
    name: Ein
    url: https://github.com/pubgo/protoc-gen-openapi
    email: ein@sudorandom.com
  license:
    name: MIT License
    url: https://github.com/pubgo/protoc-gen-openapi/blob/master/LICENSE
  version: v2
paths:
  /example.basic.Greeter/SayHello:
    post:
      tags:
        - example.basic.Greeter
      summary: SayHello
      description: This is a description just for OpenAPI
      operationId: example.basic.Greeter.SayHello
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
          application/proto:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
            application/proto:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/example.basic.HelloReply'
            application/proto:
              schema:
                $ref: '#/components/schemas/example.basic.HelloReply'
  /example.basic.Greeter/WriteHello:
    post:
      tags:
        - example.basic.Greeter
      summary: WriteHello
      description: Writes a greeting (has side effects)
      operationId: example.basic.Greeter.WriteHello
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
          application/proto:
            schema:
              $ref: '#/components/schemas/example.basic.HelloRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
            application/proto:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/example.basic.HelloReply'
            application/proto:
              schema:
                $ref: '#/components/schemas/example.basic.HelloReply'
components:
  schemas:
    example.basic.HelloReply:
      type: object
      properties:
        message:
          type: string
          title: message
      title: HelloReply
      additionalProperties: false
      description: The response message containing the greetings
    example.basic.HelloRequest:
      type: object
      properties:
        name:
          type: string
          examples:
            - Ein
          title: name
          maxLength: 100
          minLength: 3
        helloCount:
          exclusiveMaximum: 42
          type: integer
          title: hello_count
      title: HelloRequest
      additionalProperties: false
      description: The request message containing the user's name.
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security: []
tags:
  - name: example.basic.Greeter
    description: The greeting service definition.
