openapi: 3.1.0
info:
  title: tests.rpctypes.message.v1
paths:
  /v1/status:
    get:
      tags:
        - tests.rpctypes.message.v1.Status
      summary: GetStatus
      operationId: tests.rpctypes.message.v1.Status.GetStatus
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lava.error'
            application/proto:
              schema:
                $ref: '#/components/schemas/lava.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      x-folder: api/test
components:
  schemas:
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    google.protobuf.Empty:
      type: object
      description: |-
        A generic empty message that you can re-use to avoid defining duplicated
         empty messages in your APIs. A typical example is to use it as the request
         or the response type of an API method. For instance:

             service Foo {
               rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
             }
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          title: code
          format: int32
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          title: message
          description: |-
            A developer-facing error message, which should be in English. Any
             user-facing error message should be localized and sent in the
             [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          title: details
          description: |-
            A list of messages that carry the error details.  There is a common set of
             message types for APIs to use.
      title: Status
      additionalProperties: false
      description: |-
        The `Status` type defines a logical error model that is suitable for
         different programming environments, including REST APIs and RPC APIs. It is
         used by [gRPC](https://github.com/grpc). Each `Status` message contains
         three pieces of data: error code, error message, and error details.

         You can find out more about this error model and how to work with it in the
         [API Design Guide](https://cloud.google.com/apis/design/errors).
    lava-protocol-version:
      type: number
      title: Lava-Protocol-Version
      enum:
        - 1
      description: Define the version of the Lava protocol
      const: 1
    Lava-timeout-header:
      type: number
      title: Lava-Timeout-Ms
      description: Define the timeout, in ms
    lava.error:
      type: object
      properties:
        status_code:
          type: string
          examples:
            - OK
          title: status code
          format: enum
          enum:
            - OK
            - Canceled
            - InvalidArgument
            - DeadlineExceeded
            - NotFound
            - AlreadyExists
            - PermissionDenied
            - ResourceExhausted
            - FailedPrecondition
            - Aborted
            - OutOfRange
            - Unimplemented
            - Internal
            - Unavailable
            - DataLoss
            - Unauthenticated
          description: GRPC code corresponding to HTTP status code, which can be converted to each other
        name:
          type: string
          description: Error name, e.g. lava.auth.token_not_found.
        message:
          type: string
          description: Error message, e.g. token not found
        code:
          type: number
          description: Business Code, e.g. 200001
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          title: details
          description: Error detail include request or other user defined information
      title: Lava Error
      additionalProperties: true
      description: 'Error type returned by lava: https://github.com/pubgo/funk/blob/master/proto/errorpb/errors.proto'
security: []
tags:
  - name: tests.rpctypes.message.v1.Status
