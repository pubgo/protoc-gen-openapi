openapi: 3.1.0
info:
  title: tests.additional_bindings.message.v1
paths:
  /v1/messages/{message_id}:
    patch:
      tags:
        - tests.additional_bindings.message.v1.Messaging
      summary: UpdateMessage
      operationId: tests.additional_bindings.message.v1.Messaging.UpdateMessage
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
            title: message_id
      requestBody:
        content:
          application/json:
            schema:
              type: string
              title: text
          application/proto:
            schema:
              type: string
              title: text
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
            application/proto:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tests.additional_bindings.message.v1.Message'
  /v1/messages:
    patch:
      tags:
        - tests.additional_bindings.message.v1.Messaging
      summary: UpdateMessage
      operationId: tests.additional_bindings.message.v1.Messaging.UpdateMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tests.additional_bindings.message.v1.Message'
          application/proto:
            schema:
              $ref: '#/components/schemas/tests.additional_bindings.message.v1.Message'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
            application/proto:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tests.additional_bindings.message.v1.Message'
components:
  schemas:
    tests.additional_bindings.message.v1.Message:
      type: object
      properties:
        messageId:
          type: string
          title: message_id
        text:
          type: string
          title: text
      title: Message
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: tests.additional_bindings.message.v1.Messaging
